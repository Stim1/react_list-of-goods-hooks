{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortField","setSortField","isReversed","setIsReversed","sortedGoods","goods","field","ALPHABETICALLY","sort","a","b","localeCompare","BY_LENGTH","length","reverse","sortGoods","isResetVisible","className","cn","onClick","type","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,0EAbQC,EAAyB,CACpC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,qCAAAA,E,2BAAAA,E,SAAAA,M,KAML,IAuBaE,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,MAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA3BU,SAACC,EACjBC,EACAJ,GACA,IAAME,EAAW,YAAOC,GAExB,OAAQC,GACN,KAAKX,EAASY,eACZH,EAAYI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC3C,MACF,KAAKf,EAASiB,UACZR,EAAYI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAU5C,OAJIX,GACFE,EAAYU,UAGPV,EAOaW,CAAUnB,EAAiBI,EAAWE,GACpDc,EAAiBd,GAAcF,EAWrC,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEA,UAAWC,IAAG,SAAU,CACtB,UAAWlB,IAAcL,EAASY,eAClC,mBAAoBP,IAAcL,EAASY,iBAE7CY,QAAS,WACPlB,EAAaN,EAASY,iBAExBa,KAAK,SARP,iCAaA,wBACEH,UAAWC,IAAG,SAAU,CACtB,aAAclB,IAAcL,EAASiB,UACrC,sBAAuBZ,IAAcL,EAASiB,YAEhDO,QAAS,WACPlB,EAAaN,EAASiB,YAExBQ,KAAK,SARP,4BAaA,wBACEH,UAAWC,IAAG,SAAU,CACtB,aAAchB,EACd,uBAAwBA,IAE1BiB,QAtCc,WACpBhB,GAAc,SAAAkB,GAAS,OAAKA,MAsCtBD,KAAK,SANP,qBAWCJ,GACC,wBACEG,QAnDoB,WAC5BlB,EAAaN,EAASI,MACtBI,GAAc,IAkDNiB,KAAK,SACLH,UAAWC,IAAG,SAAU,sBAH1B,sBAUJ,6BACGd,EAAYkB,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCnHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b8061340.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\ntype Goods = string[];\n\nexport const goodsFromServer: Goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABETICALLY = 'Sort alphabetically',\n  BY_LENGTH = 'Sort by length',\n  NONE = '',\n}\n\nconst sortGoods = (goods: Goods,\n  field: string,\n  isReversed: boolean): Goods => {\n  const sortedGoods = [...goods];\n\n  switch (field) {\n    case SortType.ALPHABETICALLY:\n      sortedGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.BY_LENGTH:\n      sortedGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedGoods = sortGoods(goodsFromServer, sortField, isReversed);\n  const isResetVisible = isReversed || sortField;\n\n  const isResetVisibleHandler = () => {\n    setSortField(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const toggleReverse = () => {\n    setIsReversed(prevState => !prevState);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          className={cn('button', {\n            'is-info': sortField === SortType.ALPHABETICALLY,\n            'is-info is-light': sortField !== SortType.ALPHABETICALLY,\n          })}\n          onClick={() => {\n            setSortField(SortType.ALPHABETICALLY);\n          }}\n          type=\"button\"\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          className={cn('button', {\n            'is-success': sortField === SortType.BY_LENGTH,\n            'is-success is-light': sortField !== SortType.BY_LENGTH,\n          })}\n          onClick={() => {\n            setSortField(SortType.BY_LENGTH);\n          }}\n          type=\"button\"\n        >\n          Sort by length\n        </button>\n\n        <button\n          className={cn('button', {\n            'is-warning': isReversed,\n            'is-warning is-light': !isReversed,\n          })}\n          onClick={toggleReverse}\n          type=\"button\"\n        >\n          Reverse\n        </button>\n\n        {isResetVisible && (\n          <button\n            onClick={isResetVisibleHandler}\n            type=\"button\"\n            className={cn('button', 'is-danger is-light')}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement,\n);\n"],"sourceRoot":""}